import{isNumber,take}from"lodash";import{ref,defineComponent,onActivated,h}from"vue";import{onBeforeRouteLeave}from"vue-router";let routeRelations=[];function setRalations(t){if(0==routeRelations.length){let e=t.getRoutes();routeRelations=e.map(e=>({deepth:e.meta.deepth,routeName:e.name}))}}function getRouteRelationDeepth(t){var e=routeRelations.find(e=>e.routeName===t);return void 0===e?99:e.deepth}function routeIndexInQueue(t){return routeQueue.value.findIndex(e=>e.name===t.name&&e.path===t.path)}function isRouteInQueue(e){return-1!==(isNumber(e)?e:routeIndexInQueue(e))}function pushToRouteQueue(e){!isRouteInQueue(e)&&e&&e.name&&routeQueue.value.push(e)}function onRouteChangeDetectKeepAlive(u,e){var o=routeIndexInQueue(u);routeIndexInQueue(e),isRouteInQueue(o)||pushToRouteQueue(u),isRouteInQueue(o)&&(routeQueue.value=take(routeQueue.value,o+1));let n=getRouteRelationDeepth(u.name);var t=getRouteRelationDeepth(e.name),o=routeIndexInQueue(u),e=routeIndexInQueue(e);if(n<t&&-1!==e&&e<o){let e=take(routeQueue.value.map(e=>getRouteRelationDeepth(e.name)),o),t=e.findIndex(e=>e<=n);-1===t&&(t=0),routeQueue.value[t]=u,routeQueue.value=take(routeQueue.value,t+1)}}let routeQueue=ref([]);function onRouteChangeDetectTransition(e,t,u){var o=getRouteRelationDeepth(e.name),n=getRouteRelationDeepth(t.name);o===n&&99!==n?(e.meta.transition="fade",u?.onSameLevel?.(e,t)):n<=o?(e.meta.transition="slide-left",u?.onDeep?.(e,t)):(e.meta.transition="slide-right",u?.onShallow?.(e,t))}var scrollComponent=defineComponent({name:"scroll",setup(e,t){let u=ref(),o=ref(0);return onActivated(()=>{u.value&&(u.value.scrollTop=o.value)}),onBeforeRouteLeave(()=>{u.value&&(o.value=u.value.scrollTop)}),()=>h("div",{ref:u},t.slots.default())}});const Scroll={install(e,t){e.component(t?.name||scrollComponent.name,scrollComponent)}};function setKeepAliveAndTransition(e,t,u){onRouteChangeDetectKeepAlive(e,t),onRouteChangeDetectTransition(e,t,u)}export{Scroll,routeQueue,setKeepAliveAndTransition,setRalations};
